#priceRangeSortingView * {
    box-sizing: border-box;
}

#priceRangeSortingView body {
    font-family: 'Arial', sans-serif;
    background-color: #f4f4f9;
    margin: 0;
    padding: 20px;
    height: 100vh; /* To fill the entire height of the viewport */
}

#priceRangeSortingView {
    padding-top: 100px;
    padding-left: 20px;
    width: 100%;
    margin: 0 auto;
    max-height: 800px;
}

    #priceRangeSortingView .sidebar {
        display: inline-block; /* Changed from flex */
        width: 300px;
        margin-top: 20px;
        margin-right: 20px;
        padding: 20px;
        background-color: white;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        border-radius: 10px;
        vertical-align: text-top; /* Aligns the top edges of sidebar and main content */
    }

    #priceRangeSortingView h1 {
        color: #0056b3;
        margin-bottom: 7px;
    }

    #priceRangeSortingView h2 {
        color: #0056b3;
        margin-bottom: 0px;
    }

    #priceRangeSortingView .search-container,
    #priceRangeSortingView .filter-container {
        margin-bottom: 15px;
    }

    #priceRangeSortingView input[type="number"],
    #priceRangeSortingView input[type="text"],
    #priceRangeSortingView select,
    #priceRangeSortingView button {
        width: 100%;
        padding: 12px;
        margin-top: 10px;
        border: 2px solid #ccc;
        border-radius: 6px;
        transition: all 0.3s;
    }

        #priceRangeSortingView input[type="number"]:focus,
        #priceRangeSortingView input[type="text"]:focus,
        #priceRangeSortingView select:focus {
            border-color: #007bff;
            box-shadow: 0 0 8px rgba(0, 123, 255, 0.2);
        }

    /* General button styling */
    #priceRangeSortingView button {
        background-color: #007bff; /* Primary button color */
        color: white;
        cursor: pointer;
        border: none;
        padding: 8px 12px; /* Reduced padding for a smaller button */
        margin-top: 10px;
        border-radius: 6px;
        transition: all 0.3s;
        font-size: 0.9rem; /* Smaller font size */
    }

        /* Styling for hover state */
        #priceRangeSortingView button:hover {
            background-color: #0056b3; /* Darken the button color on hover */
        }

    /* size */
    #priceRangeSortingView .main-content {

        flex-grow: 1;
        width: calc(100% - 535px); /* Adjust based on sidebar */
        padding: 20px; /* add padding inside main content if needed */
        min-block-size: 785px;
    }

    #priceRangeSortingView .results {
        flex-wrap: wrap;
        gap: 20px;
        background: #ffffff;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 5px;
        overflow-y: auto;
    }

    #priceRangeSortingView .item-card {
        width: calc(50% - 10px);
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        border-radius: 5px;
        padding: 10px;
        background: white;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

        #priceRangeSortingView .item-card img {
            width: 100%;
            height: auto;
            border-radius: 4px;
        }

    #priceRangeSortingView .item-name {
        font-weight: bold;
        color: #333;
        margin: 10px 0;
    }

    #priceRangeSortingView .item-price {
        color: #007bff;
        font-size: 1.2rem;
        margin-bottom: 5px;
    }

    /* Remove any absolute positioning within the main-content or provide a relative positioning context if needed */
    #priceRangeSortingView .loading {
        display: none;
        text-align: center;
        color: #007bff;
        /* adjust the positioning contextually or remove if causing layout issues */
    }

    #priceRangeSortingView .results-title {
        font-size: 1.5em;
        color: #333;
        margin-bottom: 10px;
        text-align: left;
        padding: 0 20px; /* Adds padding to align with the items in the list */
        align-self: center
    }

    #priceRangeSortingView .results {
        display: inline-flex;
        flex-grow: 1;
        gap: 20px; /* Provides spacing between cards */
        background: #ffffff;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 5px;
        min-height: 300px; /* Ensure this is sufficient to show some items without scrolling */
        max-height: 740px; /* Or however tall you want it to be */
        overflow-y: auto;
        overflow-x: hidden;
    }
    /* how it displays */
    #priceRangeSortingView .main-content {
        flex-grow: 1;
        display: inline-flex;
        flex-direction: column;
        align-items: stretch;
        max-height: 785px;
    }

    #priceRangeSortingView .item-card-grid {
        /* Your existing styles for grid view */
    }

    #priceRangeSortingView .item-card-list {
        display: flex;
        align-items: center;
        width: 100%; /* Take full width */
        padding: 10px;
        border-bottom: 1px solid #ddd; /* Separator for list items */
        box-sizing: border-box; /* Make sure padding doesn't add to the width */
    }

        #priceRangeSortingView .item-card-list .item-image {
            width: 50px; /* Example size, adjust as needed */
            margin-right: 10px;
            /* Align image size in list view */
        }

        #priceRangeSortingView .item-card-list .item-name,
        #priceRangeSortingView .item-card-list .item-price {
            margin: 0;
            /* Ensure there's no margin to keep items in a neat line */
        }

        #priceRangeSortingView .item-card-list .item-name {
            flex-grow: 1;
            /* Allows the name to take up the remaining space */
        }

        #priceRangeSortingView .item-card-list .item-price {
            /* Any specific styles for the price in list view */
        }

    #priceRangeSortingView .item-card img {
        max-width: 225px;
        max-height: 218px;
        width: auto;
        height: auto;
        display: block; /* Removes bottom space/aligns properly in container */
        margin: 0 auto; /* Centers image in the container */
        object-fit: contain; /* Ensures the image's aspect ratio is maintained without cropping */
    }

    #priceRangeSortingView .pagination-controls button,
    #priceRangeSortingView .pagination-controls span {
        padding: 6px 10px; /* Even smaller padding for pagination buttons */
        margin: 0 5px;
        background-color: #007bff; /* Primary button color */
        border: none;
        border-radius: 3px;
        display: inline-block;
        font-size: 0.85rem; /* Slightly smaller font size for pagination controls */
    }

    #priceRangeSortingView .pagination-controls span {
        background-color: white;
        border: 1px solid #ccc; /* Adds a subtle border */
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        cursor: default;
        font-weight: bold;
    }

    #priceRangeSortingView .pagination-controls button:disabled {
        opacity: 0.5;
        cursor: not-allowed;
        background-color: #007bff; /* Primary button color */
    }

    #priceRangeSortingView .pagination-controls button:hover:not(:disabled) {
        background-color: #0056b3; /* Darker shade for hover effect */
    }

    #priceRangeSortingView .pagination-controls {
        display: flex;
        justify-content: center;
        padding: 10px 0;
        align-items: center; /* Centers items vertically */
    }

@media (max-width: 800px) {
    #priceRangeSortingView .sidebar,
    #priceRangeSortingView .main-content {
        width: 100%;
        display: block; /* Reverts to block for smaller screens */
    }

    #priceRangeSortingView .results {
        flex-direction: column;
    }

    #priceRangeSortingView .item-card {
        width: 100%;
    }
}